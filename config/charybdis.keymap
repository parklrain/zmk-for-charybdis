#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { tapping-term-ms = <400>; };

/ {
    chosen { zmk,battery = &vbatt; };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    behaviors {
        lhht: left-hand-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            hold-trigger-key-positions = <6 7 8 9 19 18 33 34 35 39 40 41 5 15 25 26 16 17 27 28 29>;
        };

        rhht: rhht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            hold-trigger-key-positions = <4 3 2 1 13 14 0 12 24 38 37 36 10 11 20 21 22 23 30 31 32>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lang_switch {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 20>;
        };

        kp_bslh {
            bindings = <&kp BACKSLASH>;
            key-positions = <0 10>;
        };

        kp_lbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 19>;
        };

        kp_apos {
            bindings = <&kp APOS>;
            key-positions = <29 19>;
        };

        kp_rbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 18>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q          &kp W             &kp E         &kp R               &kp T        &kp Y        &kp U                &kp I              &kp O              &kp P
&lhht LCTRL A  &lhht LEFT_ALT S  &lhht LGUI D  &lhht LEFT_SHIFT F  &kp G        &kp H        &rhht RIGHT_SHIFT J  &rhht RIGHT_GUI K  &rhht RIGHT_ALT L  &rhht RCTRL SEMICOLON
&kp Z          &kp X             &kp C         &kp V               &kp B        &kp N        &kp M                &kp COMMA          &kp DOT            &lt 5 SLASH
                                 &kp LEFT_GUI  &lt 4 SPACE         &lt 1 TAB    &lt 2 ENTER  &lt 3 BACKSPACE
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        Media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2   &kp F3     &kp F4   &kp LEFT_BRACKET     &out OUT_USB  &bt BT_CLR    &trans        &trans           &trans
&kp F5  &kp F6   &kp F7     &kp F8   &kp RIGHT_BRACKET    &trans        &kp C_PREV    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT
&kp F9  &kp F10  &kp F11    &kp F12  &kp SQT              &out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3
                 &kp LSHFT  &trans   &trans               &kp C_STOP    &kp C_PAUSE
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(N5)         &kp LS(NUMBER_6)    &kp LS(NUMBER_7)    &kp LS(NUMBER_8)     &kp LS(NUMBER_9)  &kp LS(NUMBER_0)
&kp HASH          &kp QUESTION      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND      &trans              &kp LC(UP_ARROW)    &trans               &kp LS(MINUS)     &kp LS(EQUAL)
&kp SLASH         &kp BACKSLASH     &kp LESS_THAN     &kp GREATER_THAN   &kp EXCLAMATION    &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)  &trans            &trans
                                    &kp LS(P)         &kp DOLLAR         &kp P              &trans              &trans
            >;
        };

        Num {
            bindings = <
&kp CARET     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL    &trans  &trans           &trans         &trans         &trans
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS     &trans  &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL
&kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS    &trans  &trans           &trans         &trans         &trans
                            &kp DOT       &kp SPACE     &kp N0       &trans  &trans
            >;
        };

        Nav {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp CAPSLOCK    &trans        &trans        &trans        &trans          &trans        &trans         &trans        &kp MINUS     &kp EQUAL
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans          &trans        &trans         &trans        &trans        &trans
                              &trans        &trans        &trans          &kp ENTER     &kp BACKSPACE
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans     &trans  &trans       &trans          &trans     &trans     &trans     &trans
&trans  &trans  &trans     &trans  &trans       &trans    &trans     &mkp MCLK  &trans     &trans
&trans  &trans  &trans     &trans  &trans       &trans  &mkp LCLK  &mo 6      &mkp RCLK  &trans
                &mkp LCLK  &trans  &mkp RCLK    &trans          &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans     &mkp MCLK  &trans     &trans
&trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK  &trans     &mkp RCLK  &trans
                &trans  &trans  &trans    &trans  &trans
            >;

            trackball-bindings = <&tsl>;//滚轮层
        };
    };
};
